参数： 
[plain] view plaincopy
-include {filename}    从给定的文件中读取配置参数   
-basedirectory {directoryname}    指定基础目录为以后相对的档案名称   
-injars {class_path}    指定要处理的应用程序jar,war,ear和目录   
-outjars {class_path}    指定处理完后要输出的jar,war,ear和目录的名称   
-libraryjars {classpath}    指定要处理的应用程序jar,war,ear和目录所需要的程序库文件   
-dontskipnonpubliclibraryclasses    指定不去忽略非公共的库类。   
-dontskipnonpubliclibraryclassmembers    指定不去忽略包可见的库类的成员。   



保留选项 

[plain] view plaincopy
-keep {Modifier} {class_specification}    保护指定的类文件和类的成员   
-keepclassmembers {modifier} {class_specification}    保护指定类的成员，如果此类受到保护他们会保护的更好   
-keepclasseswithmembers {class_specification}    保护指定的类和类的成员，但条件是所有指定的类和类成员是要存在。   
-keepnames {class_specification}    保护指定的类和类的成员的名称（如果他们不会压缩步骤中删除）   
-keepclassmembernames {class_specification}    保护指定的类的成员的名称（如果他们不会压缩步骤中删除）   
-keepclasseswithmembernames {class_specification}    保护指定的类和类的成员的名称，如果所有指定的类成员出席（在压缩步骤之后）   
-printseeds {filename}    列出类和类的成员-keep选项的清单，标准输出到给定的文件   


 
压缩 
[plain] view plaincopy
-dontshrink    不压缩输入的类文件   
-printusage {filename}   
-whyareyoukeeping {class_specification}       



优化 
[plain] view plaincopy
-dontoptimize    不优化输入的类文件   
-assumenosideeffects {class_specification}    优化时假设指定的方法，没有任何副作用   
-allowaccessmodification    优化时允许访问并修改有修饰符的类和类的成员   



混淆 
[plain] view plaincopy
-optimizationpasses 5  ->设置混淆的压缩比率 0 ~ 7 
-dontobfuscate    不混淆输入的类文件   
-printmapping {filename}   
-applymapping {filename}    重用映射增加混淆   
-obfuscationdictionary {filename}    使用给定文件中的关键字作为要混淆方法的名称   
-overloadaggressively    混淆时应用侵入式重载   
-useuniqueclassmembernames    确定统一的混淆类的成员名称来增加混淆   
-flattenpackagehierarchy {package_name}    重新包装所有重命名的包并放在给定的单一包中   
-repackageclass {package_name}    重新包装所有重命名的类文件中放在给定的单一包中   
-dontusemixedcaseclassnames    混淆时不会产生形形色色的类名   
-keepattributes {attribute_name,...}    保护给定的可选属性，例如LineNumberTable, LocalVariableTable, SourceFile, Deprecated, Synthetic, Signature, and InnerClasses.  
-renamesourcefileattribute {string}    设置源文件中给定的字符串常量  
 -optimizations !code/simplification/arithmetic,!field/*,!class/merging/*  ->混淆采用的算法.
 -verbose //->混淆后生产映射文件 map 类名->转化后类名的映射  
///////////////////////////////////////////////////
 
 -dontpreverify
-repackageclasses ''
-allowaccessmodification
-optimizations !code/simplification/arithmetic
-useuniqueclassmembernames  
 -optimizationpasses 5  
-dontusemixedcaseclassnames  
-dontskipnonpubliclibraryclasses  
-dontpreverify  
-verbose  
-optimizations !code/simplification/arithmetic,!field/*,!class/merging/*

//////////////////////
 
 
 -keep class * implements android.os.Parcelable {  //-> aidl文件不能去混淆.   
  public static final android.os.Parcelable$Creator *;  
} 

#adapter也不能混淆
-keep public class * extends android.widget.BaseAdapter {*;}
 
  -keepclasseswithmembernames class * {

    native <methods>;   -> 所有native的方法不能去混淆. 

}

 -keepclasseswithmembers class * {

    public <init>(android.content.Context, android.util.AttributeSet);

    -->某些构造方法不能去混淆

}

 -keepclasseswithmembers class * {

    public <init>(android.content.Context, android.util.AttributeSet, int);

}

 -keepclassmembers class * extends android.app.Activity {

   public void *(android.view.View);

}

 -keepclassmembers enum * {   -> 枚举类不能去混淆. 

    public static **[] values();

    public static ** valueOf(java.lang.String);

}
 
 
 -keepclasseswithmembers class * {                                               # 保持自定义控件类不被混淆
    public <init>(android.content.Context, android.util.AttributeSet);
}

-keepclasseswithmembers class * {
    public <init>(android.content.Context, android.util.AttributeSet, int);     # 保持自定义控件类不被混淆
}

-keepclassmembers class * extends android.app.Activity {                        # 保持自定义控件类不被混淆
   public void *(android.view.View);
}
 
 
 10）百度地图组件配置
#百度地图相关
-libraryjars libs/baidumapapi_v2_4_0.jar        #地图相关的jar包不要混淆
-keep class com.baidu.** { *; }                         #地图组件包括图层、定位等接口所有的类及类里面的内容都不要混淆
-keep class vi.com.gdi.bgl.android.**{*;}         #交通实况相关的类及类里面的所有内容不要混淆
-libraryjars libs/locSDK_3.1.jar                         #定位jar包不要混淆
-libraryjars libs/armeabi/libBaiduMapSDK_v2_4_0.so  #地图相关的C++编译的可执行文件（引擎）不要混淆
-libraryjars libs/armeabi/liblocSDK3.so                         #定位相关的C++编译的可执行文件（引擎）不要混淆
 
 
 
 
 
 
 
 
 
 
 